{"version":3,"sources":["support/use-auth.ts","actions/action-types.ts","actions/sign-in-actions.ts","routes/routes-constants.ts","components/processing.tsx","components/onboarding.tsx","actions/sign-out-action.ts","components/sign-out-component.tsx","components/support/utils.ts","components/support/links-generator.tsx","components/error-handler-component.tsx","components/nav-bar-component.tsx","routes/private-route.tsx","actions/fetch-users-actions.ts","components/support/on-click-card.ts","components/user-card.tsx","components/users-container.tsx","actions/fetch-details-actions.ts","components/support/user-info-utils.ts","components/user-info.tsx","actions/dispaly-existing-user-action.ts","actions/edit-user-action.ts","App.tsx","support/axios.ts","sagas/sign-in-saga.ts","sagas/fetch-users-saga.ts","sagas/fetch-details-saga.ts","sagas/root-saga.ts","reducers/loading-reducer.ts","reducers/auth-reducer.ts","reducers/users-reducer.ts","reducers/error-reducer.ts","reducers/details-reducer.ts","reducers/root-reducer.ts","store-sagas.ts","support/local-storage.ts","index.tsx"],"names":["useAuth","useSelector","state","auth","isAuthReady","token","isLoggedIn","error","loading","dispatch","useDispatch","onSignIn","useCallback","action","login","password","LOADING","LOADED","EDIT_USER","DELETE_USER","SIGN_OUT","SIGN_IN_REQUEST","SIGN_UP_REQUEST","SIGN_IN_SUCCESS","SIGN_IN_ERROR","FETCH_USERS_REQUEST","FETCH_USERS_SUCCESS","FETCH_USERS_ERROR","CLEAR_USERS_INFO","CLEAN_ERROR","FETCH_DETAILS_REQUEST","FETCH_DETAILS_SUCCESS","FETCH_DETAILS_ERROR","CLEAN_DETAILS_INFO","DISPLAY_EXISTING_USER","signInRequest","username","type","payload","signUpRequest","ROUTES","signIn","signUp","dynamic","usersPage","number","user","id","Processing","Spinner","icon","faSpinner","Onboarding","buttonName","history","useHistory","useForm","register","handleSubmit","errors","watch","useRef","current","useEffect","push","className","onSubmit","data","htmlFor","name","ref","required","minLength","value","message","pattern","validate","hasDigit","test","hasSpecialCharacter","Button","variant","size","SignUpComponent","SignInComponent","to","signOutAction","SignOutButton","onClick","usersOnPage","fetchingStep","leadUserCards","i","leadUserCardsDefiner","initialStateUsersInfoGenerator","pageNumber","quantity","usersToMock","usersRest","usersInfo","firstName","lastName","picture","details","linksGenerator","n","linksArr","pagesQuantity","Math","floor","j","link","ErrorHandler","stateError","allErrorsHandler","addToast","useToasts","appearance","onDismiss","NavBar","users","PrivateRoute","Component","component","render","rest","props","pathname","from","location","fetchUsersRequest","orderNumber","fetchUsersSuccess","usersPortion","total","useUserCard","useLocation","onClickCardEdit","onClickCardDelete","deleteUserAction","useStyles","makeStyles","theme","root","maxWidth","width","display","justifyContent","flexWrap","margin","large","spacing","height","actions","padding","boxShadow","header","UserCard","classes","userName","lastname","params","useParams","appPage","Number","pageToFetch","indexOf","pageToFetchDefiner","onChange","isVisible","includes","Card","CardActions","disableSpacing","IconButton","aria-label","path","mdiAccountEditOutline","title","horizontal","rotate","vertical","color","mdiDeleteForeverOutline","Avatar","alt","src","img","CardHeader","UsersContainer","Container","cardsArr","info","forEach","item","index","userCard","toString","userCardsGenerator","fetchDetailsRequest","fetchDetailsSuccess","dateOfBirth","s","b","split","Date","UTC","parseISOString","age","now","getTime","msInYear","Age","years","UserInfo","control","setValue","length","style","fontSize","defaultValue","selected","Slider","event","nowInSec","onChangeAge","step","max","valueLabelDisplay","date","birthdayInSec","onChangeDateOfBirth","App","basename","process","exact","toastedApp","AUTH_URL","APP_ID","sendCredentials","axios","post","signInToApi","fetchDataFromApiAuth","get","headers","then","fetchDetailsFromApi","signInSaga","call","response","put","fetchUsersSaga","fetchDetailsSaga","rootSaga","takeEvery","loadingReducer","INITIAL_STATE","errorReducer","userInitialState","rootReducer","combineReducers","previousState","JSON","parse","stringify","usersInfoUpdated","splice","stateBeforeDetails","stateBeforeEditing","stateBeforeDelete","filter","sagaMiddleware","createSagaMiddleware","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","tokenLoaded","storedState","localStorage","getItem","err","alert","console","log","loadState","initialState","storeSagas","createStore","subscribe","setItem","saveState","getState","run","ReactDOM","store","document","getElementById"],"mappings":"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","file":"static/js/main.5de45eb3.chunk.js","sourcesContent":["import {useSelector, useDispatch} from \"react-redux\";\nimport {StoreState} from \"../types/ts-types\";\nimport {useCallback} from \"react\";\nimport {signInRequest, signUpRequest} from \"../actions/sign-in-actions\";\n\nexport default function useAuth() {\n    const {isAuthReady, token, isLoggedIn, error, loading} = useSelector((state: StoreState) => state.auth);\n    const dispatch = useDispatch();\n\n    const onSignIn = useCallback((action: (login: string, password: string) => ReturnType<typeof signInRequest> | ReturnType<typeof signUpRequest>, {\n        login,\n        password\n    }: { login: string, password: string }) => dispatch(action(login, password)), [dispatch])\n\n    return {\n        isAuthReady,\n        token,\n        isLoggedIn,\n        error,\n        loading,\n        onSignIn\n    }\n}\n","export const LOADING = 'LOADING';\nexport const LOADED = 'LOADED';\nexport const EDIT_USER = '@details/EDIT_USER' as const;\nexport const DELETE_USER = '@users/DELETE_USER' as const;\nexport const SIGN_OUT = '@auth/SIGN_OUT' as const;\nexport const SIGN_IN_REQUEST = '@auth/SIGN_IN_REQUEST' as const;\nexport const SIGN_UP_REQUEST = '@auth/SIGN_UP_REQUEST' as const;\nexport const SIGN_IN_SUCCESS = '@auth/SIGN_IN_SUCCESS' as const;\nexport const SIGN_IN_ERROR = '@auth/SIGN_IN_ERROR' as const;\nexport const FETCH_USERS_REQUEST = '@users/FETCH_USERS_REQUEST' as const;\nexport const FETCH_USERS_SUCCESS = '@users/FETCH_USERS_SUCCESS' as const;\nexport const FETCH_USERS_ERROR = '@users/FETCH_USERS_ERROR' as const;\nexport const CLEAR_USERS_INFO = '@users/CLEAR_USERS_INFO' as const;\nexport const CLEAN_ERROR = 'CLEAN_ERROR';\nexport const FETCH_DETAILS_REQUEST = '@details/FETCH_DETAILS_REQUEST' as const;\nexport const FETCH_DETAILS_SUCCESS = '@details/FETCH_DETAILS_SUCCESS' as const;\nexport const FETCH_DETAILS_ERROR = '@details/FETCH_DETAILS_ERROR' as const;\nexport const CLEAN_DETAILS_INFO = '@details/CLEAN_DETAILS_INFO' as const;\nexport const DISPLAY_EXISTING_USER = '@details/DISPLAY_EXISTING_USER' as const;","import {SIGN_IN_REQUEST, SIGN_IN_SUCCESS, SIGN_IN_ERROR, SIGN_UP_REQUEST} from \"./action-types\";\n\nexport const signInRequest = (username: string, password: string) => ({\n    type: SIGN_IN_REQUEST,\n    payload: {\n        username,\n        password,\n    }\n});\n\nexport const signUpRequest = (username: string, password: string) => ({\n    type: SIGN_UP_REQUEST,\n    payload: {\n        username,\n        password,\n    }\n});\n\nexport const signInSuccess = (token: string) => ({\n    type: SIGN_IN_SUCCESS,\n    payload: {\n        token\n    }\n});\n\nexport const signInFailed = (error: Error) => ({\n    type: SIGN_IN_ERROR,\n    payload: {\n        error\n    }\n});","const ROUTES = {\n    signIn: '/sign-in',\n    signUp: '/sign-up',\n    dynamic: {\n        usersPage: (number: number | string = ':number') => `/users-page/${number}`,\n        user: (number: number | string = ':number', id = ':id') => `/users-page/${number}/user/${id}`,\n    }\n}\n\nexport default ROUTES;","import React from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport './components.css';\nimport {faSpinner} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Processing = () => {\n    const Spinner = <FontAwesomeIcon icon={faSpinner}/>\n        return <div id='processing'>\n            {/*<div id='pseudo-nav-bar'> </div>*/}\n            <div id='spinner'><span>{Spinner}</span></div>\n        </div>\n}\n\nexport default Processing;","import React, {useEffect, useRef} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {useForm} from 'react-hook-form';\nimport './components.css';\nimport {useHistory, Link} from 'react-router-dom';\nimport Button from \"@material-ui/core/Button\";\nimport {OnboardingFormData} from \"../types/ts-types\";\nimport useAuth from \"../support/use-auth\";\nimport {signInRequest, signUpRequest} from \"../actions/sign-in-actions\";\nimport ROUTES from \"../routes/routes-constants\";\nimport {State} from \"../store-sagas\";\nimport Processing from \"./processing\";\n\nconst Onboarding = (action: any, buttonName: string) => {\n    const state = useSelector(state => state as State);\n    const history = useHistory();\n    const { register, handleSubmit, errors, watch } = useForm<OnboardingFormData>();\n    const password=useRef({});\n    password.current = watch('password', '');\n    const {onSignIn} = useAuth();\n    useEffect(() => {\nif (state.auth.token) {\n    history.push(ROUTES.dynamic.usersPage(1))}\n    })\n\n    return ( <>\n        {state.auth.loading ? <Processing /> : <div id='onboarding-container' className='form-container'>\n                <h2>{buttonName} to proceed</h2>\n                <form id='onboarding-form' onSubmit={handleSubmit((data)=>{\n                    onSignIn(action, data);\n                })}>\n                    <div className='form-fields-container'>\n                        <div className='form-group'>\n                            <label htmlFor='login'>Login: </label>\n                            <input className='textInput' name=\"login\" ref={register({\n                                required: \"You must specify a login\",\n                                minLength: {\n                                    value: 5,\n                                    message: \"Login must have at least 5 characters\"\n                                },\n                                pattern: {\n                                    value: /^[A-Za-z-_]+$/,\n                                    message: 'Login can include only literals and \"-\" or \"_\" symbols one or more capitalized letters',\n                                }\n                            })} />\n                            {errors.login && <p>{errors.login.message}</p>}\n                        </div>\n                        <div className='form-group'>\n                            <label htmlFor='password'>Password: </label>\n                            <input type='password' className='textInput' name=\"password\" ref={register({\n                                required: \"You must specify a password\",\n                                minLength: {\n                                    value: 8,\n                                    message: \"Password must have at least 8 characters\"\n                                },\n                                pattern: {\n                                    value: /.*[A-Z].*/,\n                                    message: \"Password must include one or more capitalized letters\",\n                                },\n                                validate: {\n                                    hasDigit: value => /.*\\d.*/.test(value) || \"Password must include one or more digits\",\n                                    hasSpecialCharacter: value => /.*[/\\\\~!@#$%^&*()_+-].*/.test(value) || \"Password must include one or more \\\\~!@#$%/^&*()_+- characters\"\n                                }\n                            })} />\n                            {errors.password && <p>{errors.password.message}</p>}\n                        </div>\n                        <Button type='submit' className='action-button' variant='contained' size=\"medium\">\n                            {buttonName}\n                        </Button>\n                    </div>\n                </form>\n            </div>}\n</>\n    )\n}\n\nexport const SignUpComponent = () => {\n    return Onboarding(signUpRequest, 'Sign up');\n}\n\nexport const SignInComponent = () => {\n    return <div>\n        {Onboarding(signInRequest, 'Sign in')}\n        <div>or <Link to='/sign-up'>create new account</Link> if you aren't signed up yet</div>\n    </div>\n}\n\nexport default Onboarding;","import {SIGN_OUT} from \"./action-types\";\n\nconst signOutAction = () => {\n    return {\n        type: SIGN_OUT\n    }\n}\n\nexport default signOutAction;","import React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport signOutAction from \"../actions/sign-out-action\";\nimport {useDispatch} from \"react-redux\";\nimport './components.css';\n\nconst SignOutButton = () => {\n    const dispatch = useDispatch();\n    return <Button id='sign-out' className='action-button' variant='contained' size=\"medium\" onClick={() => {dispatch(signOutAction())}}>\n        Sign out\n    </Button>\n}\n\nexport default SignOutButton;","import {UserState} from \"../../support/axios\";\n\nexport const usersOnPage = 40;\nexport let usersOnPageDynamic = usersOnPage;\nexport const fetchingStep = 5;\nconst leadUserCardsDefiner = () => {\n    let leadUserCards = [];\n    for (let i=0; i < usersOnPage; i+=fetchingStep){\n        leadUserCards.push(i);\n    }\n    return leadUserCards;\n}\n\nexport const leadUserCards = leadUserCardsDefiner();\n\nexport const initialStateUsersInfoGenerator = (pageNumber: number, quantity: number) => {\n    let usersToMock;\n    const usersRest = quantity - usersOnPage*(pageNumber-1);\n    usersToMock = usersRest > usersOnPage ? usersOnPage : usersRest;\n    let usersInfo = [];\n    for (let i=0; i<usersToMock; i++) {\n        usersInfo.push({id: i as number | string, firstName: 'Firstname', lastName: 'Lastname', picture: 'none', details: {} as {} | UserState});\n    }\nreturn usersInfo;\n}\n\nexport const pageToFetchDefiner = (appPage: number, orderNumber: number) => {\n    const currentUsersPageStartsAt = usersOnPage/fetchingStep*(appPage-1);\n    return currentUsersPageStartsAt+leadUserCards.indexOf(orderNumber);\n}\n","import {Link} from \"react-router-dom\";\nimport ROUTES from \"../../routes/routes-constants\";\nimport {usersOnPage} from \"./utils\";\n\nconst linksGenerator = (n: number): JSX.Element[] => {\n    let linksArr: Array<JSX.Element> | [] = [];\n    let pagesQuantity = Math.floor(n/usersOnPage);\n    if (n > pagesQuantity*usersOnPage) {\n        pagesQuantity++;\n    }\n    for (let j = 1; j < pagesQuantity + 1; j++) {\n        let link: JSX.Element = <Link key={`link-to-${j + 1}`} to={ROUTES.dynamic.usersPage(j)}>\n        <div className='page-number'>{j}</div>\n            </Link>\n        // @ts-ignore\n        linksArr.push(link);\n    }\n    return linksArr;\n}\n\nexport default linksGenerator;","import {useSelector, useDispatch} from \"react-redux\";\nimport React, {useEffect} from \"react\";\nimport {useToasts} from 'react-toast-notifications';\nimport {CLEAN_ERROR} from \"../actions/action-types\";\nimport signOutAction from \"../actions/sign-out-action\";\nimport {StoreState} from \"../types/ts-types\";\n\nconst ErrorHandler = () => {\n    const stateError: Error = useSelector((state: StoreState) => state.allErrorsHandler.error);\n    const {addToast} = useToasts();\n    const dispatch = useDispatch();\n    const cleanError = () => {\n        dispatch({type: CLEAN_ERROR});\n        if (stateError.message === 'Request failed with status code 403') {\n            dispatch(signOutAction());\n        }\n    };\n    useEffect(() => {\n        if (stateError) {\n            addToast(stateError.message, {\n                appearance: 'error',\n                onDismiss: id => cleanError()\n            })\n        }\n\n    }, [stateError])\n\n    return (<div id='error-handler'> </div>)\n}\n\nexport default ErrorHandler;\n\n","import React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport './components.css';\nimport SignOutButton from \"./sign-out-component\";\nimport linksGenerator from \"./support/links-generator\";\nimport ErrorHandler from './error-handler-component'\nimport {StoreState} from \"../types/ts-types\";\n\n\nconst NavBar = () => {\n    const state: StoreState = useSelector((state: StoreState) => {\n        return state;\n    });\n    return <div id='nav-bar' className='flex-container space-between-container'>\n        {ErrorHandler()}\n        <div id='pagination' className='flex-container component-container'>\n            {state.users.quantity ? <><span>pages:</span>{linksGenerator(state.users.quantity)}</>  : null}\n        </div>\n        <div id='sign-out-container'>\n            {state.auth.token ? <SignOutButton/> : null}\n        </div>\n    </div>\n\n}\n\nexport default NavBar;","import React from 'react';\nimport { Redirect, Route, RouteProps, RouteComponentProps } from 'react-router-dom';\nimport Processing from \"../components/processing\";\nimport useAuth from \"../support/use-auth\";\nimport ROUTES from \"./routes-constants\";\n\nconst PrivateRoute: React.FC<RouteProps> = ({ component: Component, render, ...rest }) => {\n    const {loading, isLoggedIn } = useAuth();\n\n    const renderComponent = (props: RouteComponentProps) => {\n        if (loading) {\n            return <Processing />;\n        } else\n            if (isLoggedIn) {\n            return Component ? <Component {...props} /> : null;\n        } else {\n            return <Redirect to={{ pathname: ROUTES.signIn, state: { from: props.location } }} />;\n        }\n    };\n\n    return <Route {...rest} render={render || renderComponent} />;\n};\n\nexport default PrivateRoute;","import {\n    CLEAR_USERS_INFO,\n    DELETE_USER,\n    FETCH_USERS_ERROR,\n    FETCH_USERS_REQUEST,\n    FETCH_USERS_SUCCESS\n} from \"./action-types\";\nimport signOutAction from \"./sign-out-action\";\nimport {UsersItem} from \"../types/ts-types\";\nimport {fetchDetailsSuccess} from \"./fetch-details-actions\";\nimport {editUserAction} from \"./edit-user-action\";\n\nexport const fetchUsersRequest = (pageNumber: number, token: string, orderNumber: number) => {\n    return {\n        type: FETCH_USERS_REQUEST,\n        payload: {pageNumber, token, orderNumber}\n    }\n}\n\nexport const fetchUsersSuccess = (usersPortion: UsersItem[], total: number, orderNumber: number) => {\n    return {\n        type: FETCH_USERS_SUCCESS,\n        payload: {\n            usersPortion,\n            total,\n            orderNumber\n        }\n    }\n}\n\nexport const fetchUsersError = (error: Error) => {\n    return {\n        type: FETCH_USERS_ERROR,\n        payload: {\n            error\n        }\n    }\n}\n\nexport const clearUsersInfo = (pageNumber: number, quantity: number) => {\n    return {\n        type: CLEAR_USERS_INFO,\n        payload: {\n            pageNumber,\n            quantity\n        }\n    }\n}\n\nexport const deleteUserAction = (id) => {\n    return {\n        type: DELETE_USER,\n        payload: {id}\n    }\n}\n\nexport type FetchUsersActions = ReturnType<typeof fetchUsersError | typeof fetchUsersRequest | typeof fetchUsersSuccess | typeof signOutAction | typeof clearUsersInfo | typeof fetchDetailsSuccess | typeof editUserAction | typeof deleteUserAction>;","import {deleteUserAction} from '../../actions/fetch-users-actions';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {State} from \"../../store-sagas\";\nimport {useCallback} from \"react\";\nimport {useHistory, useLocation} from 'react-router-dom';\n\nexport const useUserCard = () => {\n    const state = useSelector((state: State) => state);\n    const location = useLocation();\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const onClickCardEdit = useCallback((id: string) => {\n        history.push(`${location.pathname}/user/${id}`, {from: location})\n    }, []);\n    const onClickCardDelete = useCallback((id: string) => {\n        dispatch(deleteUserAction(id));\n    }, [])\n    return {\n        state,\n        dispatch,\n        location,\n        history,\n        onClickCardEdit,\n        onClickCardDelete\n    }\n}\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport Card from '@material-ui/core/Card';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Avatar from '@material-ui/core/Avatar';\nimport CardActions from '@material-ui/core/CardActions';\nimport { mdiAccountEditOutline, mdiDeleteForeverOutline } from '@mdi/js';\nimport {IconButton} from \"@material-ui/core\";\nimport Icon from '@mdi/react';\nimport PropTypes from \"prop-types\";\nimport {UserCardProps} from \"../types/ts-types\";\nimport VisibilitySensor from 'react-visibility-sensor';\nimport {leadUserCards, pageToFetchDefiner} from \"./support/utils\";\nimport {fetchUsersRequest} from \"../actions/fetch-users-actions\";\nimport {useUserCard} from \"./support/on-click-card\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 345,\n        width: '15%',\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        margin: '20px'\n    },\n    large: {\n        width: theme.spacing(10),\n        height: theme.spacing(10),\n    },\n    actions: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-between',\n        padding: '1px',\n        boxShadow:  '0px 13px 13px #ebf2f5'\n},\nheader: {\n        width: '100%',\n}\n}));\n\n\n\nconst UserCard = (props: UserCardProps)=>{\n    const {state, dispatch, onClickCardEdit, onClickCardDelete} = useUserCard();\n    const classes = useStyles();\n    const userName=`${props.name} ${props.lastname}`;\n    const params: any = useParams();\n    const appPage = Number(params.number);\n    const orderNumber: number = props.orderNumber;\n    const pageToFetch = pageToFetchDefiner(appPage, orderNumber);\n    const visibilityOnChange = (isVisible: boolean) => {\n        if (isVisible) {\n            if (leadUserCards.includes(orderNumber) && props.name === 'Firstname'){\ndispatch(fetchUsersRequest(pageToFetch, state.auth.token, orderNumber))\n            }\n        }\n    }\n    return <VisibilitySensor onChange={visibilityOnChange}>\n        <Card id ={props.id} className={`${classes.root} card`}>\n            <CardActions disableSpacing className={classes.actions}>\n                <IconButton aria-label='edit card'\n                            onClick={()=>{\n                                onClickCardEdit(props.id)\n                            }}>\n                    <Icon path={mdiAccountEditOutline}\n                          title=\"edit card\"\n                          size={1}\n                          horizontal\n                          rotate={180}\n                          vertical\n                          color=\"#f5d442\"\n                    />\n                </IconButton>\n                <IconButton aria-label='delete card'\n                            onClick = {()=>{\n                                onClickCardDelete(props.id)\n                            }}\n                >\n                    <Icon path={mdiDeleteForeverOutline}\n                          title=\"delete card\"\n                          size={1}\n                          horizontal\n                          rotate={180}\n                          vertical\n                          color=\"red\"/>\n                </IconButton>\n            </CardActions>\n            <Avatar alt={`${props.name} ${props.lastname}`} src={props.img} className={classes.large}/>\n            <CardHeader className={classes.header} title={userName} />\n        </Card>\n    </VisibilitySensor>}\n\nUserCard.propTypes = {\n    name: PropTypes.string,\n    lastname: PropTypes.string,\n    id: PropTypes.string,\n    img: PropTypes.string\n}\n\nexport default UserCard;\n","import React, {useEffect} from 'react';\nimport UserCard from \"./user-card\";\nimport PropTypes from 'prop-types';\nimport {Container} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {useParams} from 'react-router-dom';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport './components.css';\nimport {UsersItem} from \"../types/ts-types\";\nimport {clearUsersInfo, fetchUsersRequest} from \"../actions/fetch-users-actions\";\nimport {State} from \"../store-sagas\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'space-evenly',\n        flexWrap: 'wrap',\n        // backgroundColor: '#ebf2f5',\n        margin: '0',\n        padding: '5px',\n        maxWidth: '100%'\n    }\n}));\n\nconst UsersContainer = (props) => {\n    const state = useSelector((state: State) => state);\n    const classes = useStyles();\n    let {location} = props;\n    const params: any = useParams();\n    const dispatch = useDispatch();\n    useEffect(() => {\n        if (!state.users.quantity && state.auth.token) {\n            dispatch(fetchUsersRequest(Number(params.number) - 1, state.auth.token, 0));\n        } else if (state.users.quantity && params.number !== location.state?.params?.number) {\n            dispatch(clearUsersInfo(Number(params.number), state.users.quantity));\n        }\n        return () => {\n            location.state = null\n        }\n    }, [params.number, state.users.quantity])\n\n    const userCardsGenerator = (): JSX.Element[] => {\n        let cardsArr: JSX.Element[] = [];\n        state.users.info.forEach((item: UsersItem, index: number) => {\n            const userCard: JSX.Element = (\n                <UserCard orderNumber={index} key={item.id.toString()} name={item.firstName} lastname={item.lastName}\n                          id={item.id.toString()}\n                          img={item.picture}/>);\n            cardsArr.push(userCard);\n        })\n        return cardsArr;\n    }\n\n\n    return <Container className={`flex-container, ${classes.root} users-container`}>\n        {userCardsGenerator()}\n    </Container>\n\n}\n\nUsersContainer.propTypes = {\n    users: PropTypes.array\n}\n\nexport default UsersContainer;","import {\n    FETCH_DETAILS_ERROR,\n    FETCH_DETAILS_REQUEST,\n    FETCH_DETAILS_SUCCESS,\n    CLEAN_DETAILS_INFO\n} from \"../actions/action-types\";\nimport {FetchDetailsFromApi} from \"../support/axios\";\nimport {UserState} from \"../support/axios\";\nimport {displayExistingUserAction} from \"./dispaly-existing-user-action\";\nimport {editUserAction} from \"./edit-user-action\";\n\nexport const fetchDetailsRequest = (id: string, token: string) => {\n    return {\n        type: FETCH_DETAILS_REQUEST,\n        payload: {id, token}\n    }\n}\n\nexport const fetchDetailsSuccess = (details: UserState) => {\n    const parseISOString = (s) => {\n        const b = (s.split(/\\D+/));\n        //const b:  = a.map(item => item);\n        return new Date(Date.UTC(b[0], --b[1], b[2], b[3], b[4], b[5], b[6]));\n    };\n    const dateOfBirth = parseISOString(details.dateOfBirth);\n\n    let age = Date.now() - dateOfBirth.getTime();\n    age = age / 31556952000; //ms in year\n    age = Math.floor(age);\n    details.age = age;\n    return {\n        type: FETCH_DETAILS_SUCCESS,\n        payload: {\n            details\n        }\n    }\n\n}\n\nexport const fetchDetailsError = (error: Error) => {\n    return {\n        type: FETCH_DETAILS_ERROR,\n        payload: {\n            error\n        }\n    }\n}\n\nexport const cleanDetailsInfo = () => {\n    return {\n        type: CLEAN_DETAILS_INFO\n    }\n}\n\nexport type FetchDetailsActions = ReturnType<typeof fetchDetailsError | typeof fetchDetailsRequest | typeof fetchDetailsSuccess | typeof cleanDetailsInfo | typeof displayExistingUserAction | typeof editUserAction>","const msInYear = 31556952000;\n\nexport const onChangeAge = (event: any, value: number | number[], setValue): void => {\n    setValue('age', value);\n    const nowInSec = Date.now();\n    if (typeof value === 'number') {\n        const ageInSec = value * msInYear;\n        const birthdayInSec = nowInSec - ageInSec;\n        const birthdayChanged = new Date(birthdayInSec);\n        setValue('dateOfBirth', birthdayChanged);\n    }\n};\n\nexport const onChangeDateOfBirth = (date: Date, setValue) => {\n    setValue('dateOfBirth', date);\n    const nowInSec = Date.now();\n    const birthdayInSec = date.getTime();\n    const ageChanged = Math.floor((nowInSec - birthdayInSec) / msInYear);\n    setValue('age', ageChanged);\n};","import React, {useEffect} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useForm, Controller} from 'react-hook-form';\nimport {IconButton} from '@material-ui/core';\nimport './components.css'\nimport {Avatar, Slider} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {useHistory, useParams} from 'react-router-dom';\nimport ForwardIcon from '@material-ui/icons/Forward';\nimport Button from \"@material-ui/core/Button\";\nimport {State} from \"../store-sagas\";\nimport {UserInfoFormData} from \"../types/ts-types\";\nimport {CLEAN_DETAILS_INFO} from \"../actions/action-types\";\nimport {displayExistingUserAction} from \"../actions/dispaly-existing-user-action\";\nimport {fetchDetailsRequest} from \"../actions/fetch-details-actions\";\nimport {editUserAction} from \"../actions/edit-user-action\";\nimport {onChangeDateOfBirth, onChangeAge} from \"./support/user-info-utils\";\n\nconst useStyles = makeStyles((theme) => ({\n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n    }\n}));\n\ninterface PropsAge {\n    years: number\n}\n\nconst Age = (props: PropsAge) => {\n    return <div>{props.years}</div>\n}\n\nconst UserInfo = (props) => {\n    const state = useSelector((state: State) => state);\n    const dispatch = useDispatch();\n    let history = useHistory();\n    let {location} = props;\n    const params: {number: string, id: string} = useParams();\n    const classes = useStyles();\n    const {\n        register,\n        handleSubmit,\n        control,\n        setValue,\n        watch\n    } = useForm<UserInfoFormData>(/*{defaultValues: {years: 0}}*/);\n    let age: number;\n    let dateOfBirth: Date;\n    if (state.user.info) {\n        // @ts-ignore\n        age = watch('age', state.user.info.age);\n        dateOfBirth = watch('dateOfBirth', new Date(state.user.info.dateOfBirth));\n    }\n\n    useEffect(() => {\n        const {id} = params;\n        if (state.users.info.length < 1) {\n            dispatch(fetchDetailsRequest(id, state.auth.token))\n        } else {\n            for (let i = 0; i < state.users.info.length; i++) {\n                if (state.users.info[i].id === id) {\n                    dispatch({type: CLEAN_DETAILS_INFO});\n                    if (state.users.info[i].details) {\n                        // @ts-ignore\n                        dispatch(displayExistingUserAction(state.users.info[i].details))\n                    } else {\n                        if (state.auth.token) {\n                            dispatch(fetchDetailsRequest(id, state.auth.token))\n                        };\n                        // }\n                        break;\n                    }\n                }\n            }}\n    }, [] )\n\n    return (<> {state.user.info ? <div id='user-info' className='form-container'>\n            <IconButton aria-label='get back'\n                        id='get-back'\n                onClick={() => {\n                    history.push(location.state.from.pathname, {params});\n                }}\n            >\n                <ForwardIcon className='turn180' color='primary' style={{fontSize: 75}} rotate={180}/>\n            </IconButton>\n            <div>\n                <Avatar alt={`${state.user.info.firstName} ${state.user.info.lastName}`} src={state.user.info.picture}\n                        className={classes.large}/>\n\n            </div>\n            <form id='user-form' onSubmit={handleSubmit(((data) => {\n                data.id = state.user.info.id;\n                dispatch(editUserAction(data));\n                history.push(location.state.from.pathname, {params});\n            }))}>\n                <div className='form-group'>\n                    <label htmlFor='firstName'>Firstname: </label>\n                    <input className='textInput' name=\"firstName\" type='firstName' ref={register}\n                           defaultValue={state.user.info.firstName}/></div>\n                <div className='form-group'>\n                    <label htmlFor='firstName'>Lastname: </label>\n                    <input className='textInput' name=\"lastName\" type='lastName' ref={register}\n                           defaultValue={state.user.info.lastName}/></div>\n                <div className='form-group'>\n                    <label htmlFor='title'>Title: </label>\n                    <select name=\"title\" ref={register}>\n                        <option className='title-selection' value={state.user.info.title}\n                                selected={true}>{state.user.info.title}</option>\n                        <option className='title-selection' value=\"miss\">miss</option>\n                        <option className='title-selection' value=\"mrs\">mrs</option>\n                        <option className='title-selection' value=\"mr\">mr</option>\n                    </select>\n                </div>\n\n                <div className='form-group'>\n                    <label htmlFor='age'>Age: </label>\n                    <Age years={age}/>\n                </div>\n\n                <div className='form-group'>\n                    <label htmlFor='age'>Change age: </label>\n                    <Controller\n                        name='age'\n                        control={control}\n                        render={() =>\n                            <Slider\n                                defaultValue={state.user.info ? state.user.info.age : 5}\n                                onChange={(event, value: number | number[]) => {\n                                    onChangeAge(event, value, setValue);\n                                }}\n                                step={1} max={150} valueLabelDisplay=\"auto\"/>\n                        }\n                    />\n\n                </div>\n\n                <div className='form-group'>\n                    <label htmlFor='dateOfBirth'>Birthday date: </label>\n                    <Controller\n                        name='dateOfBirth'\n                        type='dateOfBirth'\n                        defaultValue={new Date(state.user.info.dateOfBirth)}\n                        control={control}\n                        render={() =>\n                            <DatePicker name='dateOfBirth' selected={dateOfBirth} onChange={(date: Date) => {\n                                onChangeDateOfBirth(date, setValue);\n                            }}/>\n                        }\n                    />\n                </div>\n                <Button type='submit' id='save' className='action-button' variant='contained' size=\"medium\">\n                    Save\n                </Button>\n            </form>\n        </div> : <div>There is no information about separate user</div>} </>\n\n    )\n\n}\n\nexport default UserInfo;\n","import {DISPLAY_EXISTING_USER} from \"./action-types\";\nimport {UserState} from \"../support/axios\";\n\nexport const displayExistingUserAction = (details: UserState) => {\n    return {\n        type: DISPLAY_EXISTING_USER,\n        payload: {details}\n    }\n}\n","import {EDIT_USER} from \"./action-types\";\n\nexport const editUserAction = (details) => {\n    return {\n        type: EDIT_USER,\n        payload: {\n            details\n        }\n    }\n}\n","import './App.css';\nimport {SignUpComponent, SignInComponent} from \"./components/onboarding\";\nimport NavBar from \"./components/nav-bar-component\";\nimport {\n    BrowserRouter as Router,\n    Route,\n    Redirect\n} from \"react-router-dom\";\nimport {useSelector} from \"react-redux\";\nimport PrivateRoute from \"./routes/private-route\";\nimport ROUTES from \"./routes/routes-constants\";\nimport UsersContainer from \"./components/users-container\";\nimport UserInfo from \"./components/user-info\";\nimport {ToastProvider} from \"react-toast-notifications\";\nimport {State} from \"./store-sagas\";\n\nfunction App() {\n    const state = useSelector((state: State) => state);\n    return (\n        <div className=\"App\">\n            <Router basename={process.env.REACT_APP_PUBLIC_URL}>\n                <NavBar/>\n                <Route path='/' exact>\n                    <Redirect to={state.auth.token ? ROUTES.dynamic.usersPage(1) : '/sign-in'}/>\n                </Route>\n                <PrivateRoute path={ROUTES.dynamic.usersPage()} exact component={UsersContainer}/>\n                <PrivateRoute path={ROUTES.dynamic.user()} exact component={UserInfo} />\n                <Route path={ROUTES.signIn} component={SignInComponent}/>\n                <Route path={ROUTES.signUp} component={SignUpComponent}/>\n            </Router>\n\n        </div>\n    );\n}\n\nconst toastedApp = () => {\n    return <ToastProvider><App/></ToastProvider>\n}\n\nexport default toastedApp;\n","import axios, {AxiosPromise} from \"axios\";\nimport {fetchingStep} from \"../components/support/utils\";\nimport {UsersItem} from \"../types/ts-types\";\n\n// const BASE_URL = process.env.REACT_APP_BASE_URL;\nconst AUTH_URL = process.env.REACT_APP_AUTH_URL;\nconst APP_ID = process.env.REACT_APP_APP_ID;\n\ninterface Credentials {\n    userId: string,\n    token: string\n}\ninterface FetchUsersResponse {\n    usersPortion: UsersItem[],\n    total: number\n}\n\ntype Location = {\n    street: string,\n    city: string,\n    state: string,\n    country: string,\n    timezone: string\n}\n\nexport type FetchDetailsFromApi = {\n    id: string,\n    title: string,\n    firstName: string,\n    lastName: string,\n    gender: string,\n    email: string,\n    dateOfBirth: string,\n    registerDate: string,\n    phone: string,\n    picture: string,\n    location: Location\n}\n\nexport type UserState = FetchDetailsFromApi & {age?: number | number[]}\n\nexport const sendCredentials = (login: string, password: string): AxiosPromise<Credentials> => axios.post(`${AUTH_URL}/sign-up`, {username: login, password: password});\n\nexport const signInToApi= (login: string, password: string): AxiosPromise<Credentials> => axios.post(`${AUTH_URL}/sign-in`, {username: login, password: password});\n\nexport const fetchDataFromApiAuth = (i: number, token: string): Promise<FetchUsersResponse> =>\n    axios.get(`${AUTH_URL}/user/?page=${i}&limit=${fetchingStep}`, { headers: { 'app-id': APP_ID, 'Authorization': `Bearer ${token}` } }).then(({data}) => {\n        return {usersPortion: data.data, total: data.total};\n    })\n\nexport const fetchDetailsFromApi = (id: string, token: string): Promise<FetchDetailsFromApi> =>\n    axios.get(`${AUTH_URL}/user/${id}`, { headers: { 'app-id': APP_ID, 'Authorization': `Bearer ${token}` }} )\n        .then(({data})=>{return data})","import {call, put, SagaReturnType} from 'redux-saga/effects';\nimport {SIGN_UP_REQUEST} from \"../actions/action-types\";\nimport {sendCredentials, signInToApi} from \"../support/axios\";\nimport {signInRequest, signUpRequest, signInSuccess, signInFailed} from \"../actions/sign-in-actions\";\n\nexport function* signInSaga(action: ReturnType<typeof signInRequest> | ReturnType<typeof signUpRequest>) {\n    try {\n        const {password, username} = action.payload;\n        let response: SagaReturnType<typeof signInToApi> | SagaReturnType<typeof sendCredentials>;\n        if (action.type === SIGN_UP_REQUEST) {\n            response = yield call(sendCredentials, username, password);\n        } else {\n            response = yield call(signInToApi, username, password);\n        }\n        yield put(signInSuccess(response.data.token))\n    } catch (e) {\n        yield put(signInFailed(e))\n    }\n}","import {call, put, SagaReturnType} from 'redux-saga/effects';\nimport {fetchUsersError, fetchUsersRequest, fetchUsersSuccess} from \"../actions/fetch-users-actions\";\nimport {fetchDataFromApiAuth} from \"../support/axios\";\n\nexport function* fetchUsersSaga(action: ReturnType<typeof fetchUsersRequest>) {\n    try {\n        const {pageNumber, token, orderNumber} = action.payload;\n        const response: SagaReturnType<typeof fetchDataFromApiAuth> = yield call(fetchDataFromApiAuth, pageNumber, token);\n        const {usersPortion, total} = response;\n        yield put(fetchUsersSuccess(usersPortion, total, orderNumber))\n    } catch (e) {\n        yield put(fetchUsersError(e))\n    }\n}","import {call, put, SagaReturnType} from 'redux-saga/effects';\nimport {fetchDetailsError, fetchDetailsRequest, fetchDetailsSuccess} from \"../actions/fetch-details-actions\";\nimport {fetchDetailsFromApi} from \"../support/axios\";\n\nexport function* fetchDetailsSaga(action: ReturnType<typeof fetchDetailsRequest>) {\ntry {\n    const {id, token} = action.payload;\n    const details: SagaReturnType<typeof fetchDetailsFromApi> = yield call(fetchDetailsFromApi, id, token);\n    yield put(fetchDetailsSuccess(details))\n} catch (e) {\n    yield put(fetchDetailsError(e))\n}\n}","import {takeEvery} from 'redux-saga/effects';\nimport {\n    SIGN_IN_REQUEST, SIGN_UP_REQUEST, FETCH_USERS_REQUEST, FETCH_DETAILS_REQUEST\n} from \"../actions/action-types\";\nimport {signInSaga} from \"./sign-in-saga\";\nimport {fetchUsersSaga} from \"./fetch-users-saga\";\nimport {fetchDetailsSaga} from \"./fetch-details-saga\";\n\n\nexport default function* rootSaga() {\n    // yield takeEvery(AUTH_INIT_FETCHING_ACTION, authInitFetchingSaga);\n    // yield takeEvery(DISPLAY_USER_ACTION, displayUserSaga);\n    yield takeEvery(SIGN_IN_REQUEST, signInSaga);\n    yield takeEvery(SIGN_UP_REQUEST, signInSaga);\n    yield takeEvery(FETCH_USERS_REQUEST, fetchUsersSaga);\n    yield takeEvery(FETCH_DETAILS_REQUEST, fetchDetailsSaga)\n}","import {LOADING, LOADED} from \"../actions/action-types\";\n\nconst loadingReducer = (state=false, action: { type: string; }) => {\n    switch (action.type) {\n        case LOADING: {\n            return true\n        }\n        case LOADED: {\n            return false\n        }\n        default: {\n            return state\n        }\n    }\n}\n\nexport default loadingReducer;","import {AuthActions} from \"../types/ts-types\";\nimport {SIGN_IN_ERROR, SIGN_IN_REQUEST, SIGN_IN_SUCCESS, SIGN_OUT, SIGN_UP_REQUEST} from \"../actions/action-types\";\n\nexport const INITIAL_STATE = {\n    loading: false,\n    isLoggedIn: false,\n    isAuthReady: false,\n    token: null as null | string,\n    error: null as null | Error,\n}\n\nexport const authReducer = (state=INITIAL_STATE, action: AuthActions) => {\n    switch (action.type) {\n        case SIGN_IN_REQUEST:\n        case SIGN_UP_REQUEST: {\n            return {\n                ...state,\n                loading: true,\n                error: null\n            }\n        }\n        case SIGN_IN_SUCCESS: {\n            const {token} = action.payload;\n            return {\n                ...state,\n                loading: false,\n                token,\n                error: null,\n                isAuthReady: true,\n                isLoggedIn: !!token\n            }\n        }\n        case SIGN_IN_ERROR: {\n            const {error} = action.payload;\n            return {\n                ...state,\n                loading: false,\n                error,\n                isAuthReady: true\n            }\n        }\n        case SIGN_OUT: {\n            return {\n                loading: false,\n                isLoggedIn: false,\n                isAuthReady: false,\n                token: null,\n                error: null\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\n","import {\n    CLEAR_USERS_INFO, EDIT_USER, FETCH_DETAILS_SUCCESS,\n    FETCH_USERS_ERROR,\n    FETCH_USERS_REQUEST,\n    FETCH_USERS_SUCCESS,\n    SIGN_OUT,\n    DELETE_USER\n} from \"../actions/action-types\";\nimport {FetchUsersActions} from \"../actions/fetch-users-actions\";\nimport {fetchingStep, initialStateUsersInfoGenerator} from \"../components/support/utils\";\n\nconst INITIAL_STATE = {\n    loading: false,\n    error: null as null | Error,\n    info: [] as [] | ReturnType<typeof initialStateUsersInfoGenerator>,\n    quantity: null as null | number\n}\n\nexport const usersReducer = (state = INITIAL_STATE, action: FetchUsersActions) => {\n    switch (action.type) {\n        case FETCH_USERS_REQUEST: {\n            return {\n                ...state,\n                loading: true,\n                error: null\n            }\n        }\n        case FETCH_USERS_SUCCESS: {\n            const {usersPortion, orderNumber} = action.payload;\n            const previousState = JSON.parse(JSON.stringify(state));\n            let usersInfoUpdated = previousState.info;\n            usersInfoUpdated.splice(orderNumber, fetchingStep, ...usersPortion);\n            return {\n                loading: false,\n                error: null,\n                info: usersInfoUpdated,\n                quantity: state.quantity ? state.quantity : action.payload.total\n            }\n        }\n        case FETCH_USERS_ERROR: {\n            return {\n                ...state,\n                loading: false,\n                error: action.payload.error\n            }\n        }\n        case SIGN_OUT: {\n            return {\n                loading: false,\n                error: null,\n                info: [],\n                quantity: null\n            }\n        }\n        case CLEAR_USERS_INFO: {\n            const {pageNumber, quantity} = action.payload;\n            return {\n                ...state,\n                info: initialStateUsersInfoGenerator(pageNumber, quantity)\n            }\n        }\n        case FETCH_DETAILS_SUCCESS: {\n            let stateBeforeDetails = JSON.parse(JSON.stringify(state));\n            const {details} = action.payload;\n            const id  = details.id;\n            for (let i = 0; i < stateBeforeDetails.info.length; i++) {\n                if (stateBeforeDetails.info[i].id === id) {\n                    stateBeforeDetails.info[i].details = details;\n                    break;\n                }\n            }\n            return stateBeforeDetails;\n        }\n        case EDIT_USER: {\n            let stateBeforeEditing = JSON.parse(JSON.stringify(state));\n            const {details} = action.payload;\n            const id  = details.id;\n            for (let i = 0; i < stateBeforeEditing.info.length; i++) {\n                if (stateBeforeEditing.info[i].id === id) {\n                    stateBeforeEditing.info[i] = {...stateBeforeEditing.info[i], ...action.payload.details};\n                    stateBeforeEditing.info[i].details = {...stateBeforeEditing.info[i].details, ...action.payload.details};\n                    break;\n                }\n            }\n            return stateBeforeEditing;\n        }\n        case DELETE_USER: {\n            let stateBeforeDelete = JSON.parse(JSON.stringify(state));\n            stateBeforeDelete.info = stateBeforeDelete.info.filter(item => item.id !== action.payload.id);\n            return stateBeforeDelete;\n        }\n        default: {\n            return state\n        }\n    }\n}\n","import {CLEAN_ERROR} from \"../actions/action-types\";\n\nconst errorReducer = (state = {error: null as null | Error}, action: any) => {\n    if (action.payload && action.payload.error) {\n        return {\n            ...state,\n            error: action.payload.error\n        }\n    } else if (action.type === CLEAN_ERROR) {\n        return {error: null}\n    } else {\n        return state;\n    }\n}\n\nexport default errorReducer;","import {\n    FETCH_DETAILS_ERROR,\n    FETCH_DETAILS_REQUEST,\n    FETCH_DETAILS_SUCCESS,\n    CLEAN_DETAILS_INFO,\n    DISPLAY_EXISTING_USER, EDIT_USER\n} from \"../actions/action-types\";\nimport {UserState} from \"../support/axios\";\nimport {FetchDetailsActions} from \"../actions/fetch-details-actions\";\n\n\n\nexport const userInitialState = {\n    loading: false,\n    info: null as null | UserState,\n    error: null as null | Error\n}\n\nexport const detailsReducer= (state = userInitialState, action: FetchDetailsActions) => {\nswitch (action.type) {\n    case FETCH_DETAILS_REQUEST: {\n        return {\n            loading: true,\n            info: null,\n            error: null\n        }\n    }\n    case FETCH_DETAILS_SUCCESS: {\n        return {\n            loading: false,\n            info: action.payload.details,\n            error: null\n        }\n    }\n    case FETCH_DETAILS_ERROR: {\n        return {\n            ...state,\n            loading: false,\n            error: action.payload.error\n        }\n    }\n    case CLEAN_DETAILS_INFO: {\n        return userInitialState;\n    }\n    case DISPLAY_EXISTING_USER: {\n        return {\n            loading: false,\n            info: action.payload.details,\n            error: null\n        }\n    }\n    case EDIT_USER: {\n        let stateBeforeEditing = JSON.parse(JSON.stringify(state));\n        return {...stateBeforeEditing.info, ...action.payload.details}\n    }\n    default: {\n        return state\n    }\n}\n}\n","import loadingReducer from \"./loading-reducer\";\nimport { combineReducers } from \"redux\";\nimport {authReducer} from \"./auth-reducer\";\nimport {usersReducer} from \"./users-reducer\";\nimport errorReducer from \"./error-reducer\";\nimport {detailsReducer} from \"./details-reducer\";\n\nconst rootReducer = combineReducers({\n    loading: loadingReducer,\n    auth: authReducer,\n    users: usersReducer,\n    allErrorsHandler: errorReducer,\n    user: detailsReducer\n});\n\nexport default rootReducer;","import createSagaMiddleware from 'redux-saga';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport rootSaga from './sagas/root-saga';\n// @ts-ignore\nimport rootReducer from \"./reducers/root-reducer\";\nimport {loadState, saveState} from \"./support/local-storage\";\nimport {AuthState, UsersItem} from \"./types/ts-types\";\nimport {userInitialState} from \"./reducers/details-reducer\";\n\nconst sagaMiddleware = createSagaMiddleware();\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst enhancer = composeEnhancers(applyMiddleware(sagaMiddleware))\n\nconst tokenLoaded = loadState();\n\nlet token = tokenLoaded ? tokenLoaded : null;\n\nexport type UsersInfo = UsersItem[];\n\nexport const initialState = {\n    loading: false,\n    allErrorsHandler: {\n        error: null as null | Error\n    },\n    auth: {\n        loading: false,\n        isLoggedIn: !!token,\n        isAuthReady: !!token,\n        token: token as null | string,\n        error: null as null | Error,\n    } as AuthState,\n    users: {\n        loading: false,\n        error: null as null | Error,\n        info: [] as [] | UsersInfo,\n        quantity: null as null | number\n    },\n    user: userInitialState\n};\n\nexport type State = typeof initialState;\n\nconst storeSagas = createStore(rootReducer, initialState, enhancer);\nstoreSagas.subscribe(() => {\n    const state: State = storeSagas.getState();\n    const token = state.auth.token;\n    saveState(token);\n});\n\nsagaMiddleware.run(rootSaga);\n\nexport default storeSagas;","export const loadState = () => {\n    try {\n        const storedState = localStorage.getItem(\"token\");\n        if (storedState === null) {\n            return undefined;\n        }\n        return JSON.parse(storedState);\n    } catch (err) {\n        alert(\n            \"There is a problem with loading state from the storage, see console for details\"\n        );\n        console.log(\"loading state from the storage:\", err.name, err.message);\n        return undefined;\n    }\n};\nexport const saveState = (token: string) => {\n    try {\n        const storedState = JSON.stringify(token);\n        localStorage.setItem(\"token\", storedState);\n    } catch (err) {\n        alert(\n            \"There is a problem with saving state to the storage, see console for details\"\n        );\n        console.log(\"saving state to the storage:\", err.name, err.message);\n    }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport storeSagas from \"./store-sagas\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <Provider store={storeSagas}>\n        <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}