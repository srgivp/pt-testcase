{"version":3,"sources":["components/users-container.tsx","components/user-card.tsx","components/support/on-click-card.ts","support/use-auth.ts","actions/sign-in-actions.ts","routes/routes-constants.ts","components/processing.tsx","components/onboarding.tsx","actions/sign-out-action.ts","components/sign-out-component.tsx","components/support/links-generator.tsx","components/error-handler-component.tsx","components/nav-bar-component.tsx","routes/private-route.tsx","actions/fetch-details-actions.ts","components/support/user-info-utils.ts","components/user-info.tsx","actions/dispaly-existing-user-action.ts","actions/edit-user-action.ts","App.tsx","support/axios.ts","sagas/sign-in-saga.ts","sagas/fetch-users-saga.ts","sagas/fetch-details-saga.ts","sagas/root-saga.ts","reducers/loading-reducer.ts","reducers/auth-reducer.ts","reducers/users-reducer.ts","reducers/error-reducer.ts","reducers/details-reducer.ts","reducers/root-reducer.ts","store-sagas.ts","support/local-storage.ts","index.tsx","components/support/utils.ts","actions/fetch-users-actions.ts","actions/action-types.ts"],"names":["useStyles","makeStyles","theme","root","display","justifyContent","flexWrap","margin","padding","maxWidth","UsersContainer","props","state","useSelector","classes","location","params","useParams","dispatch","useDispatch","useEffect","users","quantity","auth","token","fetchUsersRequest","eval","number","clearUsersInfo","userCardsGenerator","cardsArr","info","forEach","item","index","userCard","orderNumber","name","firstName","lastname","lastName","id","toString","img","picture","push","className","width","large","spacing","height","actions","boxShadow","header","UserCard","useUserCard","onClickCardEdit","onClickCardDelete","userName","appPage","pageToFetch","pageToFetchDefiner","visibilityOnChange","isVisible","leadUserCards","includes","onChange","disableSpacing","aria-label","onClick","path","mdiAccountEditOutline","title","size","horizontal","rotate","vertical","color","mdiDeleteForeverOutline","alt","src","useLocation","history","useHistory","useCallback","pathname","from","deleteUserAction","useAuth","isAuthReady","isLoggedIn","error","loading","onSignIn","action","login","password","signInRequest","username","type","SIGN_IN_REQUEST","payload","signUpRequest","SIGN_UP_REQUEST","ROUTES","signIn","signUp","dynamic","usersPage","user","Processing","Spinner","icon","faSpinner","Onboarding","buttonName","useForm","register","handleSubmit","errors","watch","useRef","current","onSubmit","data","htmlFor","ref","required","minLength","value","message","pattern","validate","hasDigit","test","hasSpecialCharacter","Button","variant","SignUpComponent","SignInComponent","to","signOutAction","SIGN_OUT","SignOutButton","linksGenerator","n","linksArr","pagesQuantity","Math","floor","usersOnPage","j","link","ErrorHandler","stateError","allErrorsHandler","addToast","useToasts","appearance","onDismiss","CLEAN_ERROR","NavBar","PrivateRoute","Component","component","render","rest","fetchDetailsRequest","FETCH_DETAILS_REQUEST","fetchDetailsSuccess","details","dateOfBirth","s","b","split","Date","UTC","parseISOString","age","now","getTime","FETCH_DETAILS_SUCCESS","msInYear","Age","years","UserInfo","control","setValue","length","i","CLEAN_DETAILS_INFO","DISPLAY_EXISTING_USER","IconButton","style","fontSize","Avatar","EDIT_USER","defaultValue","selected","Slider","event","nowInSec","onChangeAge","step","max","valueLabelDisplay","date","birthdayInSec","onChangeDateOfBirth","App","exact","AUTH_URL","process","APP_ID","sendCredentials","axios","post","signInToApi","fetchDataFromApiAuth","get","fetchingStep","headers","then","usersPortion","total","fetchDetailsFromApi","signInSaga","call","response","put","SIGN_IN_SUCCESS","SIGN_IN_ERROR","fetchUsersSaga","pageNumber","fetchUsersSuccess","fetchUsersError","fetchDetailsSaga","FETCH_DETAILS_ERROR","rootSaga","takeEvery","FETCH_USERS_REQUEST","loadingReducer","LOADING","LOADED","INITIAL_STATE","errorReducer","userInitialState","rootReducer","combineReducers","FETCH_USERS_SUCCESS","previousState","JSON","parse","stringify","usersInfoUpdated","splice","FETCH_USERS_ERROR","CLEAR_USERS_INFO","initialStateUsersInfoGenerator","stateBeforeDetails","stateBeforeEditing","DELETE_USER","stateBeforeDelete","filter","sagaMiddleware","createSagaMiddleware","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","tokenLoaded","storedState","localStorage","getItem","err","alert","console","log","loadState","initialState","storeSagas","createStore","subscribe","getState","setItem","saveState","run","ReactDOM","store","document","getElementById","leadUserCardsDefiner","usersToMock","usersRest","usersInfo","indexOf"],"mappings":"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","file":"static/js/main.b4f70dd0.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\nimport UserCard from \"./user-card\";\nimport PropTypes from 'prop-types';\nimport {Container} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {useParams} from 'react-router-dom';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport './components.css';\nimport {UsersItem} from \"../types/ts-types\";\nimport {clearUsersInfo, fetchUsersRequest} from \"../actions/fetch-users-actions\";\nimport {State} from \"../store-sagas\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'space-evenly',\n        flexWrap: 'wrap',\n        // backgroundColor: '#ebf2f5',\n        margin: '0',\n        padding: '5px',\n        maxWidth: '100%'\n    }\n}));\n\nconst UsersContainer = (props) => {\n    const state = useSelector((state: State) => state);\n    const classes = useStyles();\n    let {location} = props;\n    const params: any = useParams();\n    const dispatch = useDispatch();\n    useEffect(() => {\n        if (!state.users.quantity && state.auth.token) {\n            dispatch(fetchUsersRequest(eval(params.number) - 1, state.auth.token, 0));\n        } else if (state.users.quantity && params.number !== location.state?.params?.number) {\n            dispatch(clearUsersInfo(eval(params.number), state.users.quantity));\n        }\n        return () => {\n            location.state = null\n        }\n    }, [params.number, state.users.quantity])\n\n    const userCardsGenerator = (): JSX.Element[] => {\n        let cardsArr: JSX.Element[] = [];\n        state.users.info.forEach((item: UsersItem, index: number) => {\n            const userCard: JSX.Element = (\n                <UserCard orderNumber={index} key={item.id.toString()} name={item.firstName} lastname={item.lastName}\n                          id={item.id.toString()}\n                          img={item.picture}/>);\n            cardsArr.push(userCard);\n        })\n        return cardsArr;\n    }\n\n\n    return <Container className={`flex-container, ${classes.root} users-container`}>\n        {userCardsGenerator()}\n    </Container>\n\n}\n\nUsersContainer.propTypes = {\n    users: PropTypes.array\n}\n\nexport default UsersContainer;","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport Card from '@material-ui/core/Card';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Avatar from '@material-ui/core/Avatar';\nimport CardActions from '@material-ui/core/CardActions';\nimport { mdiAccountEditOutline, mdiDeleteForeverOutline } from '@mdi/js';\nimport {IconButton} from \"@material-ui/core\";\nimport Icon from '@mdi/react';\nimport PropTypes from \"prop-types\";\nimport {UserCardProps} from \"../types/ts-types\";\nimport VisibilitySensor from 'react-visibility-sensor';\nimport {leadUserCards, pageToFetchDefiner} from \"./support/utils\";\nimport {fetchUsersRequest} from \"../actions/fetch-users-actions\";\nimport {useUserCard} from \"./support/on-click-card\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 345,\n        width: '15%',\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        margin: '20px'\n    },\n    large: {\n        width: theme.spacing(10),\n        height: theme.spacing(10),\n    },\n    actions: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-between',\n        padding: '1px',\n        boxShadow:  '0px 13px 13px #ebf2f5'\n},\nheader: {\n        width: '100%',\n}\n}));\n\n\n\nconst UserCard = (props: UserCardProps)=>{\n    const {state, dispatch, onClickCardEdit, onClickCardDelete} = useUserCard();\n    const classes = useStyles();\n    const userName=`${props.name} ${props.lastname}`;\n    const params: any = useParams();\n    const appPage = eval(params.number);\n    const orderNumber: number = props.orderNumber;\n    const pageToFetch = pageToFetchDefiner(appPage, orderNumber);\n    const visibilityOnChange = (isVisible: boolean) => {\n        if (isVisible) {\n            if (leadUserCards.includes(orderNumber) && props.name === 'Firstname'){\ndispatch(fetchUsersRequest(pageToFetch, state.auth.token, orderNumber))\n            }\n        }\n    }\n    return <VisibilitySensor onChange={visibilityOnChange}>\n        <Card id ={props.id} className={`${classes.root} card`}>\n            <CardActions disableSpacing className={classes.actions}>\n                <IconButton aria-label='edit card'\n                            onClick={()=>{\n                                onClickCardEdit(props.id)\n                            }}>\n                    <Icon path={mdiAccountEditOutline}\n                          title=\"edit card\"\n                          size={1}\n                          horizontal\n                          rotate={180}\n                          vertical\n                          color=\"#f5d442\"\n                    />\n                </IconButton>\n                <IconButton aria-label='delete card'\n                            onClick = {()=>{\n                                onClickCardDelete(props.id)\n                            }}\n                >\n                    <Icon path={mdiDeleteForeverOutline}\n                          title=\"delete card\"\n                          size={1}\n                          horizontal\n                          rotate={180}\n                          vertical\n                          color=\"red\"/>\n                </IconButton>\n            </CardActions>\n            <Avatar alt={`${props.name} ${props.lastname}`} src={props.img} className={classes.large}/>\n            <CardHeader className={classes.header} title={userName} />\n        </Card>\n    </VisibilitySensor>}\n\nUserCard.propTypes = {\n    name: PropTypes.string,\n    lastname: PropTypes.string,\n    id: PropTypes.string,\n    img: PropTypes.string\n}\n\nexport default UserCard;\n","import {deleteUserAction} from '../../actions/fetch-users-actions';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {State} from \"../../store-sagas\";\nimport {useCallback} from \"react\";\nimport {useHistory, useLocation} from 'react-router-dom';\n\nexport const useUserCard = () => {\n    const state = useSelector((state: State) => state);\n    const location = useLocation();\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const onClickCardEdit = useCallback((id: string) => {\n        history.push(`${location.pathname}/user/${id}`, {from: location})\n    }, []);\n    const onClickCardDelete = useCallback((id: string) => {\n        dispatch(deleteUserAction(id));\n    }, [])\n    return {\n        state,\n        dispatch,\n        location,\n        history,\n        onClickCardEdit,\n        onClickCardDelete\n    }\n}\n","import {useSelector, useDispatch} from \"react-redux\";\nimport {StoreState} from \"../types/ts-types\";\nimport {useCallback} from \"react\";\nimport {signInRequest, signUpRequest} from \"../actions/sign-in-actions\";\n\nexport default function useAuth() {\n    const {isAuthReady, token, isLoggedIn, error, loading} = useSelector((state: StoreState) => state.auth);\n    const dispatch = useDispatch();\n\n    const onSignIn = useCallback((action: (login: string, password: string) => ReturnType<typeof signInRequest> | ReturnType<typeof signUpRequest>, {\n        login,\n        password\n    }: { login: string, password: string }) => dispatch(action(login, password)), [dispatch])\n\n    return {\n        isAuthReady,\n        token,\n        isLoggedIn,\n        error,\n        loading,\n        onSignIn\n    }\n}\n","import {SIGN_IN_REQUEST, SIGN_IN_SUCCESS, SIGN_IN_ERROR, SIGN_UP_REQUEST} from \"./action-types\";\n\nexport const signInRequest = (username: string, password: string) => ({\n    type: SIGN_IN_REQUEST,\n    payload: {\n        username,\n        password,\n    }\n});\n\nexport const signUpRequest = (username: string, password: string) => ({\n    type: SIGN_UP_REQUEST,\n    payload: {\n        username,\n        password,\n    }\n});\n\nexport const signInSuccess = (token: string) => ({\n    type: SIGN_IN_SUCCESS,\n    payload: {\n        token\n    }\n});\n\nexport const signInFailed = (error: Error) => ({\n    type: SIGN_IN_ERROR,\n    payload: {\n        error\n    }\n});","const ROUTES = {\n    signIn: '/sign-in',\n    signUp: '/sign-up',\n    dynamic: {\n        usersPage: (number: number | string = ':number') => `/users-page/${number}`,\n        user: (number: number | string = ':number', id = ':id') => `/users-page/${number}/user/${id}`,\n    }\n}\n\nexport default ROUTES;","import React from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport './components.css';\nimport {faSpinner} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Processing = () => {\n    const Spinner = <FontAwesomeIcon icon={faSpinner}/>\n        return <div id='processing'>\n            {/*<div id='pseudo-nav-bar'> </div>*/}\n            <div id='spinner'><span>{Spinner}</span></div>\n        </div>\n}\n\nexport default Processing;","import React, {useEffect, useRef} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {useForm} from 'react-hook-form';\nimport './components.css';\nimport {useHistory, Link} from 'react-router-dom';\nimport Button from \"@material-ui/core/Button\";\nimport {OnboardingFormData} from \"../types/ts-types\";\nimport useAuth from \"../support/use-auth\";\nimport {signInRequest, signUpRequest} from \"../actions/sign-in-actions\";\nimport ROUTES from \"../routes/routes-constants\";\nimport {State} from \"../store-sagas\";\nimport Processing from \"./processing\";\n\nconst Onboarding = (action: any, buttonName: string) => {\n    const state = useSelector(state => state as State);\n    const history = useHistory();\n    const { register, handleSubmit, errors, watch } = useForm<OnboardingFormData>();\n    const password=useRef({});\n    password.current = watch('password', '');\n    const {onSignIn} = useAuth();\n    useEffect(() => {\nif (state.auth.token) {\n    history.push(ROUTES.dynamic.usersPage(1))}\n    })\n\n    return ( <>\n        {state.auth.loading ? <Processing /> : <div id='onboarding-container' className='form-container'>\n                <h2>{buttonName} to proceed</h2>\n                <form id='onboarding-form' onSubmit={handleSubmit((data)=>{\n                    onSignIn(action, data);\n                })}>\n                    <div className='form-fields-container'>\n                        <div className='form-group'>\n                            <label htmlFor='login'>Login: </label>\n                            <input className='textInput' name=\"login\" ref={register({\n                                required: \"You must specify a login\",\n                                minLength: {\n                                    value: 5,\n                                    message: \"Login must have at least 5 characters\"\n                                },\n                                pattern: {\n                                    value: /^[A-Za-z-_]+$/,\n                                    message: 'Login can include only literals and \"-\" or \"_\" symbols one or more capitalized letters',\n                                }\n                            })} />\n                            {errors.login && <p>{errors.login.message}</p>}\n                        </div>\n                        <div className='form-group'>\n                            <label htmlFor='password'>Password: </label>\n                            <input type='password' className='textInput' name=\"password\" ref={register({\n                                required: \"You must specify a password\",\n                                minLength: {\n                                    value: 8,\n                                    message: \"Password must have at least 8 characters\"\n                                },\n                                pattern: {\n                                    value: /.*[A-Z].*/,\n                                    message: \"Password must include one or more capitalized letters\",\n                                },\n                                validate: {\n                                    hasDigit: value => /.*\\d.*/.test(value) || \"Password must include one or more digits\",\n                                    hasSpecialCharacter: value => /.*[/\\\\~!@#$%^&*()_+-].*/.test(value) || \"Password must include one or more \\\\~!@#$%/^&*()_+- characters\"\n                                }\n                            })} />\n                            {errors.password && <p>{errors.password.message}</p>}\n                        </div>\n                        <Button type='submit' className='action-button' variant='contained' size=\"medium\">\n                            {buttonName}\n                        </Button>\n                    </div>\n                </form>\n            </div>}\n</>\n    )\n}\n\nexport const SignUpComponent = () => {\n    return Onboarding(signUpRequest, 'Sign up');\n}\n\nexport const SignInComponent = () => {\n    return <div>\n        {Onboarding(signInRequest, 'Sign in')}\n        <div>or <Link to='/sign-up'>create new account</Link> if you aren't signed up yet</div>\n    </div>\n}\n\nexport default Onboarding;","import {SIGN_OUT} from \"./action-types\";\n\nconst signOutAction = () => {\n    return {\n        type: SIGN_OUT\n    }\n}\n\nexport default signOutAction;","import React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport signOutAction from \"../actions/sign-out-action\";\nimport {useDispatch} from \"react-redux\";\nimport './components.css';\n\nconst SignOutButton = () => {\n    const dispatch = useDispatch();\n    return <Button id='sign-out' className='action-button' variant='contained' size=\"medium\" onClick={() => {dispatch(signOutAction())}}>\n        Sign out\n    </Button>\n}\n\nexport default SignOutButton;","import {Link} from \"react-router-dom\";\nimport ROUTES from \"../../routes/routes-constants\";\nimport {usersOnPage} from \"./utils\";\n\nconst linksGenerator = (n: number): JSX.Element[] => {\n    let linksArr: Array<JSX.Element> | [] = [];\n    let pagesQuantity = Math.floor(n/usersOnPage);\n    if (n > pagesQuantity*usersOnPage) {\n        pagesQuantity++;\n    }\n    for (let j = 1; j < pagesQuantity + 1; j++) {\n        let link: JSX.Element = <Link key={`link-to-${j + 1}`} to={ROUTES.dynamic.usersPage(j)}>\n        <div className='page-number'>{j}</div>\n            </Link>\n        // @ts-ignore\n        linksArr.push(link);\n    }\n    return linksArr;\n}\n\nexport default linksGenerator;","import {useSelector, useDispatch} from \"react-redux\";\nimport React, {useEffect} from \"react\";\nimport {useToasts} from 'react-toast-notifications';\nimport {CLEAN_ERROR} from \"../actions/action-types\";\nimport signOutAction from \"../actions/sign-out-action\";\nimport {StoreState} from \"../types/ts-types\";\n\nconst ErrorHandler = () => {\n    const stateError: Error = useSelector((state: StoreState) => state.allErrorsHandler.error);\n    const {addToast} = useToasts();\n    const dispatch = useDispatch();\n    const cleanError = () => {\n        dispatch({type: CLEAN_ERROR});\n        if (stateError.message === 'Request failed with status code 403') {\n            dispatch(signOutAction());\n        }\n    };\n    useEffect(() => {\n        if (stateError) {\n            addToast(stateError.message, {\n                appearance: 'error',\n                onDismiss: id => cleanError()\n            })\n        }\n\n    }, [stateError])\n\n    return (<div id='error-handler'> </div>)\n}\n\nexport default ErrorHandler;\n\n","import React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport './components.css';\nimport SignOutButton from \"./sign-out-component\";\nimport linksGenerator from \"./support/links-generator\";\nimport ErrorHandler from './error-handler-component'\nimport {StoreState} from \"../types/ts-types\";\n\n\nconst NavBar = () => {\n    const state: StoreState = useSelector((state: StoreState) => {\n        return state;\n    });\n    return <div id='nav-bar' className='flex-container space-between-container'>\n        {ErrorHandler()}\n        <div id='pagination' className='flex-container component-container'>\n            {state.users.quantity ? <><span>pages:</span>{linksGenerator(state.users.quantity)}</>  : null}\n        </div>\n        <div id='sign-out-container'>\n            {state.auth.token ? <SignOutButton/> : null}\n        </div>\n    </div>\n\n}\n\nexport default NavBar;","import React from 'react';\nimport { Redirect, Route, RouteProps, RouteComponentProps } from 'react-router-dom';\nimport Processing from \"../components/processing\";\nimport useAuth from \"../support/use-auth\";\nimport ROUTES from \"./routes-constants\";\n\nconst PrivateRoute: React.FC<RouteProps> = ({ component: Component, render, ...rest }) => {\n    const {loading, isLoggedIn } = useAuth();\n\n    const renderComponent = (props: RouteComponentProps) => {\n        if (loading) {\n            return <Processing />;\n        } else\n            if (isLoggedIn) {\n            return Component ? <Component {...props} /> : null;\n        } else {\n            return <Redirect to={{ pathname: ROUTES.signIn, state: { from: props.location } }} />;\n        }\n    };\n\n    return <Route {...rest} render={render || renderComponent} />;\n};\n\nexport default PrivateRoute;","import {\n    FETCH_DETAILS_ERROR,\n    FETCH_DETAILS_REQUEST,\n    FETCH_DETAILS_SUCCESS,\n    CLEAN_DETAILS_INFO\n} from \"../actions/action-types\";\nimport {FetchDetailsFromApi} from \"../support/axios\";\nimport {UserState} from \"../support/axios\";\nimport {displayExistingUserAction} from \"./dispaly-existing-user-action\";\nimport {editUserAction} from \"./edit-user-action\";\n\nexport const fetchDetailsRequest = (id: string, token: string) => {\n    return {\n        type: FETCH_DETAILS_REQUEST,\n        payload: {id, token}\n    }\n}\n\nexport const fetchDetailsSuccess = (details: UserState) => {\n    const parseISOString = (s) => {\n        const b = (s.split(/\\D+/));\n        //const b:  = a.map(item => item);\n        return new Date(Date.UTC(b[0], --b[1], b[2], b[3], b[4], b[5], b[6]));\n    };\n    const dateOfBirth = parseISOString(details.dateOfBirth);\n\n    let age = Date.now() - dateOfBirth.getTime();\n    age = age / 31556952000; //ms in year\n    age = Math.floor(age);\n    details.age = age;\n    return {\n        type: FETCH_DETAILS_SUCCESS,\n        payload: {\n            details\n        }\n    }\n\n}\n\nexport const fetchDetailsError = (error: Error) => {\n    return {\n        type: FETCH_DETAILS_ERROR,\n        payload: {\n            error\n        }\n    }\n}\n\nexport const cleanDetailsInfo = () => {\n    return {\n        type: CLEAN_DETAILS_INFO\n    }\n}\n\nexport type FetchDetailsActions = ReturnType<typeof fetchDetailsError | typeof fetchDetailsRequest | typeof fetchDetailsSuccess | typeof cleanDetailsInfo | typeof displayExistingUserAction | typeof editUserAction>","const msInYear = 31556952000;\n\nexport const onChangeAge = (event: any, value: number | number[], setValue): void => {\n    setValue('age', value);\n    const nowInSec = Date.now();\n    if (typeof value === 'number') {\n        const ageInSec = value * msInYear;\n        const birthdayInSec = nowInSec - ageInSec;\n        const birthdayChanged = new Date(birthdayInSec);\n        setValue('dateOfBirth', birthdayChanged);\n    }\n};\n\nexport const onChangeDateOfBirth = (date: Date, setValue) => {\n    setValue('dateOfBirth', date);\n    const nowInSec = Date.now();\n    const birthdayInSec = date.getTime();\n    const ageChanged = Math.floor((nowInSec - birthdayInSec) / msInYear);\n    setValue('age', ageChanged);\n};","import React, {useEffect} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useForm, Controller} from 'react-hook-form';\nimport {IconButton} from '@material-ui/core';\nimport './components.css'\nimport {Avatar, Slider} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {useHistory, useParams} from 'react-router-dom';\nimport ForwardIcon from '@material-ui/icons/Forward';\nimport Button from \"@material-ui/core/Button\";\nimport {State} from \"../store-sagas\";\nimport {UserInfoFormData} from \"../types/ts-types\";\nimport {CLEAN_DETAILS_INFO} from \"../actions/action-types\";\nimport {displayExistingUserAction} from \"../actions/dispaly-existing-user-action\";\nimport {fetchDetailsRequest} from \"../actions/fetch-details-actions\";\nimport {editUserAction} from \"../actions/edit-user-action\";\nimport {onChangeDateOfBirth, onChangeAge} from \"./support/user-info-utils\";\n\nconst useStyles = makeStyles((theme) => ({\n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n    }\n}));\n\ninterface PropsAge {\n    years: number\n}\n\nconst Age = (props: PropsAge) => {\n    return <div>{props.years}</div>\n}\n\nconst UserInfo = (props) => {\n    const state = useSelector((state: State) => state);\n    const dispatch = useDispatch();\n    let history = useHistory();\n    let {location} = props;\n    const params: {number: string, id: string} = useParams();\n    const classes = useStyles();\n    const {\n        register,\n        handleSubmit,\n        control,\n        setValue,\n        watch\n    } = useForm<UserInfoFormData>(/*{defaultValues: {years: 0}}*/);\n    let age: number;\n    let dateOfBirth: Date;\n    if (state.user.info) {\n        // @ts-ignore\n        age = watch('age', state.user.info.age);\n        dateOfBirth = watch('dateOfBirth', new Date(state.user.info.dateOfBirth));\n    }\n\n    useEffect(() => {\n        const {id} = params;\n        if (state.users.info.length < 1) {\n            dispatch(fetchDetailsRequest(id, state.auth.token))\n        } else {\n            for (let i = 0; i < state.users.info.length; i++) {\n                if (state.users.info[i].id === id) {\n                    dispatch({type: CLEAN_DETAILS_INFO});\n                    if (state.users.info[i].details) {\n                        // @ts-ignore\n                        dispatch(displayExistingUserAction(state.users.info[i].details))\n                    } else {\n                        if (state.auth.token) {\n                            dispatch(fetchDetailsRequest(id, state.auth.token))\n                        };\n                        // }\n                        break;\n                    }\n                }\n            }}\n    }, [] )\n\n    return (<> {state.user.info ? <div id='user-info' className='form-container'>\n            <IconButton aria-label='get back'\n                        id='get-back'\n                onClick={() => {\n                    history.push(location.state.from.pathname, {params});\n                }}\n            >\n                <ForwardIcon className='turn180' color='primary' style={{fontSize: 75}} rotate={180}/>\n            </IconButton>\n            <div>\n                <Avatar alt={`${state.user.info.firstName} ${state.user.info.lastName}`} src={state.user.info.picture}\n                        className={classes.large}/>\n\n            </div>\n            <form id='user-form' onSubmit={handleSubmit(((data) => {\n                data.id = state.user.info.id;\n                dispatch(editUserAction(data));\n                history.push(location.state.from.pathname, {params});\n            }))}>\n                <div className='form-group'>\n                    <label htmlFor='firstName'>Firstname: </label>\n                    <input className='textInput' name=\"firstName\" type='firstName' ref={register}\n                           defaultValue={state.user.info.firstName}/></div>\n                <div className='form-group'>\n                    <label htmlFor='firstName'>Lastname: </label>\n                    <input className='textInput' name=\"lastName\" type='lastName' ref={register}\n                           defaultValue={state.user.info.lastName}/></div>\n                <div className='form-group'>\n                    <label htmlFor='title'>Title: </label>\n                    <select name=\"title\" ref={register}>\n                        <option className='title-selection' value={state.user.info.title}\n                                selected={true}>{state.user.info.title}</option>\n                        <option className='title-selection' value=\"miss\">miss</option>\n                        <option className='title-selection' value=\"mrs\">mrs</option>\n                        <option className='title-selection' value=\"mr\">mr</option>\n                    </select>\n                </div>\n\n                <div className='form-group'>\n                    <label htmlFor='age'>Age: </label>\n                    <Age years={age}/>\n                </div>\n\n                <div className='form-group'>\n                    <label htmlFor='age'>Change age: </label>\n                    <Controller\n                        name='age'\n                        control={control}\n                        render={() =>\n                            <Slider\n                                defaultValue={state.user.info ? state.user.info.age : 5}\n                                onChange={(event, value: number | number[]) => {\n                                    onChangeAge(event, value, setValue);\n                                }}\n                                step={1} max={150} valueLabelDisplay=\"auto\"/>\n                        }\n                    />\n\n                </div>\n\n                <div className='form-group'>\n                    <label htmlFor='dateOfBirth'>Birthday date: </label>\n                    <Controller\n                        name='dateOfBirth'\n                        type='dateOfBirth'\n                        defaultValue={new Date(state.user.info.dateOfBirth)}\n                        control={control}\n                        render={() =>\n                            <DatePicker name='dateOfBirth' selected={dateOfBirth} onChange={(date: Date) => {\n                                onChangeDateOfBirth(date, setValue);\n                            }}/>\n                        }\n                    />\n                </div>\n                <Button type='submit' id='save' className='action-button' variant='contained' size=\"medium\">\n                    Save\n                </Button>\n            </form>\n        </div> : <div>There is no information about separate user</div>} </>\n\n    )\n\n}\n\nexport default UserInfo;\n","import {DISPLAY_EXISTING_USER} from \"./action-types\";\nimport {UserState} from \"../support/axios\";\n\nexport const displayExistingUserAction = (details: UserState) => {\n    return {\n        type: DISPLAY_EXISTING_USER,\n        payload: {details}\n    }\n}\n","import {EDIT_USER} from \"./action-types\";\n\nexport const editUserAction = (details) => {\n    return {\n        type: EDIT_USER,\n        payload: {\n            details\n        }\n    }\n}\n","import './App.css';\nimport {SignUpComponent, SignInComponent} from \"./components/onboarding\";\nimport NavBar from \"./components/nav-bar-component\";\nimport {\n    BrowserRouter as Router,\n    Route,\n    Redirect\n} from \"react-router-dom\";\nimport {useSelector} from \"react-redux\";\nimport PrivateRoute from \"./routes/private-route\";\nimport ROUTES from \"./routes/routes-constants\";\nimport UsersContainer from \"./components/users-container\";\nimport UserInfo from \"./components/user-info\";\nimport {ToastProvider} from \"react-toast-notifications\";\nimport {State} from \"./store-sagas\";\n\nfunction App() {\n    const state = useSelector((state: State) => state);\n    return (\n        <div className=\"App\">\n            <Router>\n                <NavBar/>\n                <Route path='/' exact>\n                    <Redirect to={state.auth.token ? ROUTES.dynamic.usersPage(1) : '/sign-in'}/>\n                </Route>\n                <PrivateRoute path={ROUTES.dynamic.usersPage()} exact component={UsersContainer}/>\n                <PrivateRoute path={ROUTES.dynamic.user()} exact component={UserInfo} />\n                <Route path={ROUTES.signIn} component={SignInComponent}/>\n                <Route path={ROUTES.signUp} component={SignUpComponent}/>\n            </Router>\n\n        </div>\n    );\n}\n\nexport default () => {\n    return <ToastProvider><App/></ToastProvider>\n};\n","import axios, {AxiosPromise} from \"axios\";\nimport {fetchingStep} from \"../components/support/utils\";\nimport {UsersItem} from \"../types/ts-types\";\n\n// const BASE_URL = process.env.REACT_APP_BASE_URL;\nconst AUTH_URL = process.env.REACT_APP_AUTH_URL;\nconst APP_ID = process.env.REACT_APP_APP_ID;\n\ninterface Credentials {\n    userId: string,\n    token: string\n}\ninterface FetchUsersResponse {\n    usersPortion: UsersItem[],\n    total: number\n}\n\ntype Location = {\n    street: string,\n    city: string,\n    state: string,\n    country: string,\n    timezone: string\n}\n\nexport type FetchDetailsFromApi = {\n    id: string,\n    title: string,\n    firstName: string,\n    lastName: string,\n    gender: string,\n    email: string,\n    dateOfBirth: string,\n    registerDate: string,\n    phone: string,\n    picture: string,\n    location: Location\n}\n\nexport type UserState = FetchDetailsFromApi & {age?: number | number[]}\n\nexport const sendCredentials = (login: string, password: string): AxiosPromise<Credentials> => axios.post(`${AUTH_URL}/sign-up`, {username: login, password: password});\n\nexport const signInToApi= (login: string, password: string): AxiosPromise<Credentials> => axios.post(`${AUTH_URL}/sign-in`, {username: login, password: password});\n\nexport const fetchDataFromApiAuth = (i: number, token: string): Promise<FetchUsersResponse> =>\n    axios.get(`${AUTH_URL}/user/?page=${i}&limit=${fetchingStep}`, { headers: { 'app-id': APP_ID, 'Authorization': `Bearer ${token}` } }).then(({data}) => {\n        return {usersPortion: data.data, total: data.total};\n    })\n\nexport const fetchDetailsFromApi = (id: string, token: string): Promise<FetchDetailsFromApi> =>\n    axios.get(`${AUTH_URL}/user/${id}`, { headers: { 'app-id': APP_ID, 'Authorization': `Bearer ${token}` }} )\n        .then(({data})=>{return data})","import {call, put, SagaReturnType} from 'redux-saga/effects';\nimport {SIGN_UP_REQUEST} from \"../actions/action-types\";\nimport {sendCredentials, signInToApi} from \"../support/axios\";\nimport {signInRequest, signUpRequest, signInSuccess, signInFailed} from \"../actions/sign-in-actions\";\n\nexport function* signInSaga(action: ReturnType<typeof signInRequest> | ReturnType<typeof signUpRequest>) {\n    try {\n        const {password, username} = action.payload;\n        let response: SagaReturnType<typeof signInToApi> | SagaReturnType<typeof sendCredentials>;\n        if (action.type === SIGN_UP_REQUEST) {\n            response = yield call(sendCredentials, username, password);\n        } else {\n            response = yield call(signInToApi, username, password);\n        }\n        yield put(signInSuccess(response.data.token))\n    } catch (e) {\n        yield put(signInFailed(e))\n    }\n}","import {call, put, SagaReturnType} from 'redux-saga/effects';\nimport {fetchUsersError, fetchUsersRequest, fetchUsersSuccess} from \"../actions/fetch-users-actions\";\nimport {fetchDataFromApiAuth} from \"../support/axios\";\n\nexport function* fetchUsersSaga(action: ReturnType<typeof fetchUsersRequest>) {\n    try {\n        const {pageNumber, token, orderNumber} = action.payload;\n        const response: SagaReturnType<typeof fetchDataFromApiAuth> = yield call(fetchDataFromApiAuth, pageNumber, token);\n        const {usersPortion, total} = response;\n        yield put(fetchUsersSuccess(usersPortion, total, orderNumber))\n    } catch (e) {\n        yield put(fetchUsersError(e))\n    }\n}","import {call, put, SagaReturnType} from 'redux-saga/effects';\nimport {fetchDetailsError, fetchDetailsRequest, fetchDetailsSuccess} from \"../actions/fetch-details-actions\";\nimport {fetchDetailsFromApi} from \"../support/axios\";\n\nexport function* fetchDetailsSaga(action: ReturnType<typeof fetchDetailsRequest>) {\ntry {\n    const {id, token} = action.payload;\n    const details: SagaReturnType<typeof fetchDetailsFromApi> = yield call(fetchDetailsFromApi, id, token);\n    yield put(fetchDetailsSuccess(details))\n} catch (e) {\n    yield put(fetchDetailsError(e))\n}\n}","import {takeEvery} from 'redux-saga/effects';\nimport {\n    SIGN_IN_REQUEST, SIGN_UP_REQUEST, FETCH_USERS_REQUEST, FETCH_DETAILS_REQUEST\n} from \"../actions/action-types\";\nimport {signInSaga} from \"./sign-in-saga\";\nimport {fetchUsersSaga} from \"./fetch-users-saga\";\nimport {fetchDetailsSaga} from \"./fetch-details-saga\";\n\n\nexport default function* rootSaga() {\n    // yield takeEvery(AUTH_INIT_FETCHING_ACTION, authInitFetchingSaga);\n    // yield takeEvery(DISPLAY_USER_ACTION, displayUserSaga);\n    yield takeEvery(SIGN_IN_REQUEST, signInSaga);\n    yield takeEvery(SIGN_UP_REQUEST, signInSaga);\n    yield takeEvery(FETCH_USERS_REQUEST, fetchUsersSaga);\n    yield takeEvery(FETCH_DETAILS_REQUEST, fetchDetailsSaga)\n}","import {LOADING, LOADED} from \"../actions/action-types\";\n\nconst loadingReducer = (state=false, action: { type: string; }) => {\n    switch (action.type) {\n        case LOADING: {\n            return true\n        }\n        case LOADED: {\n            return false\n        }\n        default: {\n            return state\n        }\n    }\n}\n\nexport default loadingReducer;","import {AuthActions} from \"../types/ts-types\";\nimport {SIGN_IN_ERROR, SIGN_IN_REQUEST, SIGN_IN_SUCCESS, SIGN_OUT, SIGN_UP_REQUEST} from \"../actions/action-types\";\n\nexport const INITIAL_STATE = {\n    loading: false,\n    isLoggedIn: false,\n    isAuthReady: false,\n    token: null as null | string,\n    error: null as null | Error,\n}\n\nexport const authReducer = (state=INITIAL_STATE, action: AuthActions) => {\n    switch (action.type) {\n        case SIGN_IN_REQUEST:\n        case SIGN_UP_REQUEST: {\n            return {\n                ...state,\n                loading: true,\n                error: null\n            }\n        }\n        case SIGN_IN_SUCCESS: {\n            const {token} = action.payload;\n            return {\n                ...state,\n                loading: false,\n                token,\n                error: null,\n                isAuthReady: true,\n                isLoggedIn: !!token\n            }\n        }\n        case SIGN_IN_ERROR: {\n            const {error} = action.payload;\n            return {\n                ...state,\n                loading: false,\n                error,\n                isAuthReady: true\n            }\n        }\n        case SIGN_OUT: {\n            return {\n                loading: false,\n                isLoggedIn: false,\n                isAuthReady: false,\n                token: null,\n                error: null\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\n","import {\n    CLEAR_USERS_INFO, EDIT_USER, FETCH_DETAILS_SUCCESS,\n    FETCH_USERS_ERROR,\n    FETCH_USERS_REQUEST,\n    FETCH_USERS_SUCCESS,\n    SIGN_OUT,\n    DELETE_USER\n} from \"../actions/action-types\";\nimport {FetchUsersActions} from \"../actions/fetch-users-actions\";\nimport {fetchingStep, initialStateUsersInfoGenerator} from \"../components/support/utils\";\n\nconst INITIAL_STATE = {\n    loading: false,\n    error: null as null | Error,\n    info: [] as [] | ReturnType<typeof initialStateUsersInfoGenerator>,\n    quantity: null as null | number\n}\n\nexport const usersReducer = (state = INITIAL_STATE, action: FetchUsersActions) => {\n    switch (action.type) {\n        case FETCH_USERS_REQUEST: {\n            return {\n                ...state,\n                loading: true,\n                error: null\n            }\n        }\n        case FETCH_USERS_SUCCESS: {\n            const {usersPortion, orderNumber} = action.payload;\n            const previousState = JSON.parse(JSON.stringify(state));\n            let usersInfoUpdated = previousState.info;\n            usersInfoUpdated.splice(orderNumber, fetchingStep, ...usersPortion);\n            return {\n                loading: false,\n                error: null,\n                info: usersInfoUpdated,\n                quantity: state.quantity ? state.quantity : action.payload.total\n            }\n        }\n        case FETCH_USERS_ERROR: {\n            return {\n                ...state,\n                loading: false,\n                error: action.payload.error\n            }\n        }\n        case SIGN_OUT: {\n            return {\n                loading: false,\n                error: null,\n                info: [],\n                quantity: null\n            }\n        }\n        case CLEAR_USERS_INFO: {\n            const {pageNumber, quantity} = action.payload;\n            return {\n                ...state,\n                info: initialStateUsersInfoGenerator(pageNumber, quantity)\n            }\n        }\n        case FETCH_DETAILS_SUCCESS: {\n            let stateBeforeDetails = JSON.parse(JSON.stringify(state));\n            const {details} = action.payload;\n            const id  = details.id;\n            for (let i = 0; i < stateBeforeDetails.info.length; i++) {\n                if (stateBeforeDetails.info[i].id === id) {\n                    stateBeforeDetails.info[i].details = details;\n                    break;\n                }\n            }\n            return stateBeforeDetails;\n        }\n        case EDIT_USER: {\n            let stateBeforeEditing = JSON.parse(JSON.stringify(state));\n            const {details} = action.payload;\n            const id  = details.id;\n            for (let i = 0; i < stateBeforeEditing.info.length; i++) {\n                if (stateBeforeEditing.info[i].id === id) {\n                    stateBeforeEditing.info[i] = {...stateBeforeEditing.info[i], ...action.payload.details};\n                    stateBeforeEditing.info[i].details = {...stateBeforeEditing.info[i].details, ...action.payload.details};\n                    break;\n                }\n            }\n            return stateBeforeEditing;\n        }\n        case DELETE_USER: {\n            let stateBeforeDelete = JSON.parse(JSON.stringify(state));\n            stateBeforeDelete.info = stateBeforeDelete.info.filter(item => item.id !== action.payload.id);\n            return stateBeforeDelete;\n        }\n        default: {\n            return state\n        }\n    }\n}\n","import {CLEAN_ERROR} from \"../actions/action-types\";\n\nconst errorReducer = (state = {error: null as null | Error}, action: any) => {\n    if (action.payload && action.payload.error) {\n        return {\n            ...state,\n            error: action.payload.error\n        }\n    } else if (action.type === CLEAN_ERROR) {\n        return {error: null}\n    } else {\n        return state;\n    }\n}\n\nexport default errorReducer;","import {\n    FETCH_DETAILS_ERROR,\n    FETCH_DETAILS_REQUEST,\n    FETCH_DETAILS_SUCCESS,\n    CLEAN_DETAILS_INFO,\n    DISPLAY_EXISTING_USER, EDIT_USER\n} from \"../actions/action-types\";\nimport {UserState} from \"../support/axios\";\nimport {FetchDetailsActions} from \"../actions/fetch-details-actions\";\n\n\n\nexport const userInitialState = {\n    loading: false,\n    info: null as null | UserState,\n    error: null as null | Error\n}\n\nexport const detailsReducer= (state = userInitialState, action: FetchDetailsActions) => {\nswitch (action.type) {\n    case FETCH_DETAILS_REQUEST: {\n        return {\n            loading: true,\n            info: null,\n            error: null\n        }\n    }\n    case FETCH_DETAILS_SUCCESS: {\n        return {\n            loading: false,\n            info: action.payload.details,\n            error: null\n        }\n    }\n    case FETCH_DETAILS_ERROR: {\n        return {\n            ...state,\n            loading: false,\n            error: action.payload.error\n        }\n    }\n    case CLEAN_DETAILS_INFO: {\n        return userInitialState;\n    }\n    case DISPLAY_EXISTING_USER: {\n        return {\n            loading: false,\n            info: action.payload.details,\n            error: null\n        }\n    }\n    case EDIT_USER: {\n        let stateBeforeEditing = JSON.parse(JSON.stringify(state));\n        return {...stateBeforeEditing.info, ...action.payload.details}\n    }\n    default: {\n        return state\n    }\n}\n}\n","import loadingReducer from \"./loading-reducer\";\nimport { combineReducers } from \"redux\";\nimport {authReducer} from \"./auth-reducer\";\nimport {usersReducer} from \"./users-reducer\";\nimport errorReducer from \"./error-reducer\";\nimport {detailsReducer} from \"./details-reducer\";\n\nconst rootReducer = combineReducers({\n    loading: loadingReducer,\n    auth: authReducer,\n    users: usersReducer,\n    allErrorsHandler: errorReducer,\n    user: detailsReducer\n});\n\nexport default rootReducer;","import createSagaMiddleware from 'redux-saga';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport rootSaga from './sagas/root-saga';\n// @ts-ignore\nimport rootReducer from \"./reducers/root-reducer\";\nimport {loadState, saveState} from \"./support/local-storage\";\nimport {AuthState, UsersItem} from \"./types/ts-types\";\nimport {userInitialState} from \"./reducers/details-reducer\";\n\nconst sagaMiddleware = createSagaMiddleware();\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst enhancer = composeEnhancers(applyMiddleware(sagaMiddleware))\n\nconst tokenLoaded = loadState();\n\nlet token = tokenLoaded ? tokenLoaded : null;\n\nexport type UsersInfo = UsersItem[];\n\nexport const initialState = {\n    loading: false,\n    allErrorsHandler: {\n        error: null as null | Error\n    },\n    auth: {\n        loading: false,\n        isLoggedIn: !!token,\n        isAuthReady: !!token,\n        token: token as null | string,\n        error: null as null | Error,\n    } as AuthState,\n    users: {\n        loading: false,\n        error: null as null | Error,\n        info: [] as [] | UsersInfo,\n        quantity: null as null | number\n    },\n    user: userInitialState\n};\n\nexport type State = typeof initialState;\n\nconst storeSagas = createStore(rootReducer, initialState, enhancer);\nstoreSagas.subscribe(() => {\n    const state: State = storeSagas.getState();\n    const token = state.auth.token;\n    if (token){saveState(token)} ;\n});\n\nsagaMiddleware.run(rootSaga);\n\nexport default storeSagas;","export const loadState = () => {\n    try {\n        const storedState = localStorage.getItem(\"token\");\n        if (storedState === null) {\n            return undefined;\n        }\n        return JSON.parse(storedState);\n    } catch (err) {\n        alert(\n            \"There is a problem with loading state from the storage, see console for details\"\n        );\n        console.log(\"loading state from the storage:\", err.name, err.message);\n        return undefined;\n    }\n};\nexport const saveState = (token: string) => {\n    try {\n        const storedState = JSON.stringify(token);\n        localStorage.setItem(\"token\", storedState);\n    } catch (err) {\n        alert(\n            \"There is a problem with saving state to the storage, see console for details\"\n        );\n        console.log(\"saving state to the storage:\", err.name, err.message);\n    }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport storeSagas from \"./store-sagas\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <Provider store={storeSagas}>\n        <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n","import {UserState} from \"../../support/axios\";\n\nexport const usersOnPage = 40;\nexport let usersOnPageDynamic = usersOnPage;\nexport const fetchingStep = 5;\nconst leadUserCardsDefiner = () => {\n    let leadUserCards = [];\n    for (let i=0; i < usersOnPage; i+=fetchingStep){\n        leadUserCards.push(i);\n    }\n    return leadUserCards;\n}\n\nexport const leadUserCards = leadUserCardsDefiner();\n\nexport const initialStateUsersInfoGenerator = (pageNumber: number, quantity: number) => {\n    let usersToMock;\n    const usersRest = quantity - usersOnPage*(pageNumber-1);\n    usersToMock = usersRest > usersOnPage ? usersOnPage : usersRest;\n    let usersInfo = [];\n    for (let i=0; i<usersToMock; i++) {\n        usersInfo.push({id: i as number | string, firstName: 'Firstname', lastName: 'Lastname', picture: 'none', details: {} as {} | UserState});\n    }\nreturn usersInfo;\n}\n\nexport const pageToFetchDefiner = (appPage: number, orderNumber: number) => {\n    const currentUsersPageStartsAt = usersOnPage/fetchingStep*(appPage-1);\n    return currentUsersPageStartsAt+leadUserCards.indexOf(orderNumber);\n}\n","import {\n    CLEAR_USERS_INFO,\n    DELETE_USER,\n    FETCH_USERS_ERROR,\n    FETCH_USERS_REQUEST,\n    FETCH_USERS_SUCCESS\n} from \"./action-types\";\nimport signOutAction from \"./sign-out-action\";\nimport {UsersItem} from \"../types/ts-types\";\nimport {fetchDetailsSuccess} from \"./fetch-details-actions\";\nimport {editUserAction} from \"./edit-user-action\";\n\nexport const fetchUsersRequest = (pageNumber: number, token: string, orderNumber: number) => {\n    return {\n        type: FETCH_USERS_REQUEST,\n        payload: {pageNumber, token, orderNumber}\n    }\n}\n\nexport const fetchUsersSuccess = (usersPortion: UsersItem[], total: number, orderNumber: number) => {\n    return {\n        type: FETCH_USERS_SUCCESS,\n        payload: {\n            usersPortion,\n            total,\n            orderNumber\n        }\n    }\n}\n\nexport const fetchUsersError = (error: Error) => {\n    return {\n        type: FETCH_USERS_ERROR,\n        payload: {\n            error\n        }\n    }\n}\n\nexport const clearUsersInfo = (pageNumber: number, quantity: number) => {\n    return {\n        type: CLEAR_USERS_INFO,\n        payload: {\n            pageNumber,\n            quantity\n        }\n    }\n}\n\nexport const deleteUserAction = (id) => {\n    return {\n        type: DELETE_USER,\n        payload: {id}\n    }\n}\n\nexport type FetchUsersActions = ReturnType<typeof fetchUsersError | typeof fetchUsersRequest | typeof fetchUsersSuccess | typeof signOutAction | typeof clearUsersInfo | typeof fetchDetailsSuccess | typeof editUserAction | typeof deleteUserAction>;","export const LOADING = 'LOADING';\nexport const LOADED = 'LOADED';\nexport const EDIT_USER = '@details/EDIT_USER' as const;\nexport const DELETE_USER = '@users/DELETE_USER' as const;\nexport const SIGN_OUT = '@auth/SIGN_OUT' as const;\nexport const SIGN_IN_REQUEST = '@auth/SIGN_IN_REQUEST' as const;\nexport const SIGN_UP_REQUEST = '@auth/SIGN_UP_REQUEST' as const;\nexport const SIGN_IN_SUCCESS = '@auth/SIGN_IN_SUCCESS' as const;\nexport const SIGN_IN_ERROR = '@auth/SIGN_IN_ERROR' as const;\nexport const FETCH_USERS_REQUEST = '@users/FETCH_USERS_REQUEST' as const;\nexport const FETCH_USERS_SUCCESS = '@users/FETCH_USERS_SUCCESS' as const;\nexport const FETCH_USERS_ERROR = '@users/FETCH_USERS_ERROR' as const;\nexport const CLEAR_USERS_INFO = '@users/CLEAR_USERS_INFO' as const;\nexport const CLEAN_ERROR = 'CLEAN_ERROR';\nexport const FETCH_DETAILS_REQUEST = '@details/FETCH_DETAILS_REQUEST' as const;\nexport const FETCH_DETAILS_SUCCESS = '@details/FETCH_DETAILS_SUCCESS' as const;\nexport const FETCH_DETAILS_ERROR = '@details/FETCH_DETAILS_ERROR' as const;\nexport const CLEAN_DETAILS_INFO = '@details/CLEAN_DETAILS_INFO' as const;\nexport const DISPLAY_EXISTING_USER = '@details/DISPLAY_EXISTING_USER' as const;"],"sourceRoot":""}